#set($command = $helper.getByName($command_name, $robot))
#set($params = $command.getProperty("Parameters").getValue())
#set($len = $params.size() - 2)
#set($last = $len + 1)

#if( $params.size() > 0 )
#class($command.name)::#class($command.name)(#if( $len >= 0 )#foreach($i in [0..$len])#param_declaration_cpp($params.get($i)), #end#end#if( $last >= 0 )#param_declaration_cpp($params.get($last))#end): #klass($command)() {
#else
#class($command.name)::#class($command.name)(): frc::PIDCommand("#class($command_name)", ${command.getProperty("P").getValue()}, ${command.getProperty("I").getValue()}, ${command.getProperty("D").getValue()}, ${command.getProperty("Period").getValue()}) {
 {
#end
    #foreach($param in $params)
m_$param.getName() = $param.getName();
    #end
    // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
#@autogenerated_code("requires", "    ")
#parse("${exporter_path}Command-requires.cpp")
#end
#if ( $command.getProperty("Run When Disabled").getValue() )
    SetRunWhenDisabled(true);
#end
}