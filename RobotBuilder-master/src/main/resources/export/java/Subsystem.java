#header()

package ${package}.subsystems;
#set($subsystem = $helper.getByName($subsystem_name, $robot))
#macro( klass $cmd )#if( "#type($cmd)" == "" ) SubsystemBase #else#type($cmd)#end#end


import ${package}.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
#@autogenerated_code("imports", "")
#parse("${exporter_path}Subsystem-imports.java")
#end


/**
 *
 */
public class #class($subsystem.name) extends #klass($subsystem) {

#@autogenerated_code("constants", "    ")
#parse("${exporter_path}Subsystem-constants.java")
#end

#@autogenerated_code("declarations", "    ")
#parse("${exporter_path}Subsystem-declarations.java")
#end

    public #class($subsystem.name)() {
#@autogenerated_code("constructors", "        ")
#parse("${exporter_path}Subsystem-constructors.java")
#end
    }

    @Override
    public void initDefaultCommand() {
#@autogenerated_code("default_command", "        ")
#parse("${exporter_path}Subsystem-default_command.java")
#end

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

#@autogenerated_code("cmdpidgetters", "    ")
#parse("${exporter_path}Subsystem-pidgetters.java")
#end

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

